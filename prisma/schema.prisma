// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id_user   String      @id @default(uuid())
  nama_user String
  role      Role
  username  String
  password  String
  Transaksi Transaksi[]
}

model Menu {
  id_menu          Int                @id @default(autoincrement())
  nama_menu        String
  jenis            Jenis
  deskripsi        String
  gambar           String             @db.LongText
  harga            Int
  date_added       DateTime           @default(now())
  Detail_Transaksi Detail_Transaksi[]
}

model Meja {
  id_meja    Int         @id @default(autoincrement())
  nomor_meja String
  Transaksi  Transaksi[]
}

model Transaksi {
  id_transaksi     String             @id @default(uuid())
  tgl_transaksi    DateTime           @default(now())
  id_user          String?
  id_meja          Int?
  cashiername      String
  nama_pelanggan   String
  status           Status
  total_harga      Int
  User             User?              @relation(fields: [id_user], references: [id_user])
  Meja             Meja?              @relation(fields: [id_meja], references: [id_meja], onDelete: NoAction, onUpdate: NoAction)
  Detail_Transaksi Detail_Transaksi[]
}

model Detail_Transaksi {
  id_detail_transaksi String    @id @default(uuid())
  id_transaksi        String
  id_menu             Int?
  jumlah              Int
  total_harga         Int
  Transaksi           Transaksi @relation(fields: [id_transaksi], references: [id_transaksi])
  Menu                Menu?     @relation(fields: [id_menu], references: [id_menu])
}

enum Role {
  Admin
  Cashier
  Manager
}

enum Jenis {
  Foods
  Drinks
}

enum Status {
  Unpaid
  Paid
}
